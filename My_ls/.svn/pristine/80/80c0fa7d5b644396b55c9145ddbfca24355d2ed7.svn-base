#include <sys/types.h>
#include <stdio.h>
#include <dirent.h>
#include <stdlib.h>
#include <unistd.h>
#include <limits.h> 
#include <errno.h>

int check_directory(void) 
{
   char cwd[1024];
   if (getcwd(cwd, sizeof(cwd)) != NULL)
       fprintf(stdout, "Current working dir: %s\n", cwd);
   else
       perror("getcwd() error");
   return 0;
}

void my_putchar (char c)
{
  write(1, &c, 1);
}

void my_putstr(char *s1)
{
  int i;
  
  i = 0;
  while (s1[i] != '\0')
    {
      my_putchar(s1[i]);
      i++;
    }
}

/*
** Fonctions ls -> affiche les fichiers non cacher
*/
int my_lsb(void)
{
  char            path[PATH_MAX + 1];
  DIR             *dir;
  struct dirent   *entry;
  
  getcwd(path, PATH_MAX);
  if ((dir = opendir(path)) == NULL)
     return (EXIT_FAILURE);
  while ((entry = readdir(dir)) != NULL)
  {
  		if(entry->d_name[1] != '.')
      {
    	 my_putstr(entry->d_name);
       my_putstr("   ");
      }
     // faire un stat ou lstat ici. Attention aux chemins relatifs
  }
  my_putstr("\n");
  if (closedir(dir) == -1)
     return (EXIT_FAILURE);
  return (EXIT_SUCCESS);
}

int main(void)
{
  my_ls();
  return 0;
}